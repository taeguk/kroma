// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"encoding/json"

	"github.com/ethereum-optimism/optimism/op-bindings/solc"
)

const ValidatorRewardVaultStorageLayoutJSON = "{\"storage\":[{\"astId\":1000,\"contract\":\"contracts/L2/ValidatorRewardVault.sol:ValidatorRewardVault\",\"label\":\"totalProcessed\",\"offset\":0,\"slot\":\"0\",\"type\":\"t_uint256\"},{\"astId\":1001,\"contract\":\"contracts/L2/ValidatorRewardVault.sol:ValidatorRewardVault\",\"label\":\"rewards\",\"offset\":0,\"slot\":\"1\",\"type\":\"t_mapping(t_address,t_uint256)\"},{\"astId\":1002,\"contract\":\"contracts/L2/ValidatorRewardVault.sol:ValidatorRewardVault\",\"label\":\"isPaid\",\"offset\":0,\"slot\":\"2\",\"type\":\"t_mapping(t_uint256,t_bool)\"},{\"astId\":1003,\"contract\":\"contracts/L2/ValidatorRewardVault.sol:ValidatorRewardVault\",\"label\":\"totalReserved\",\"offset\":0,\"slot\":\"3\",\"type\":\"t_uint256\"}],\"types\":{\"t_address\":{\"encoding\":\"inplace\",\"label\":\"address\",\"numberOfBytes\":\"20\"},\"t_bool\":{\"encoding\":\"inplace\",\"label\":\"bool\",\"numberOfBytes\":\"1\"},\"t_mapping(t_address,t_uint256)\":{\"encoding\":\"mapping\",\"label\":\"mapping(address =\u003e uint256)\",\"numberOfBytes\":\"32\",\"key\":\"t_address\",\"value\":\"t_uint256\"},\"t_mapping(t_uint256,t_bool)\":{\"encoding\":\"mapping\",\"label\":\"mapping(uint256 =\u003e bool)\",\"numberOfBytes\":\"32\",\"key\":\"t_uint256\",\"value\":\"t_bool\"},\"t_uint256\":{\"encoding\":\"inplace\",\"label\":\"uint256\",\"numberOfBytes\":\"32\"}}}"

var ValidatorRewardVaultStorageLayout = new(solc.StorageLayout)

var ValidatorRewardVaultDeployedBin = "0x6080604052600436106100c05760003560e01c80636ed39f6211610074578063b98debbf1161004e578063b98debbf14610233578063c71b0e1c14610267578063d3e5792b1461027d57600080fd5b80636ed39f62146101c557806370a08231146101da57806384411d651461021d57600080fd5b80633ccfd60b116100a55780633ccfd60b1461014c57806354fd4d501461016157806362aba76b1461018357600080fd5b80630d9019e1146100cc57806321670f221461012a57600080fd5b366100c757005b600080fd5b3480156100d857600080fd5b506101007f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561013657600080fd5b5061014a610145366004610b66565b6102b1565b005b34801561015857600080fd5b5061014a6105f0565b34801561016d57600080fd5b50610176610696565b6040516101219190610c0a565b34801561018f57600080fd5b506101b77f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610121565b3480156101d157600080fd5b5061014a610739565b3480156101e657600080fd5b506101b76101f5366004610c24565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205490565b34801561022957600080fd5b506101b760005481565b34801561023f57600080fd5b506101007f000000000000000000000000000000000000000000000000000000000000000081565b34801561027357600080fd5b506101b760035481565b34801561028957600080fd5b506101b77f000000000000000000000000000000000000000000000000000000000000000081565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000167fffffffffffffffffffffffffeeeeffffffffffffffffffffffffffffffffeeef330173ffffffffffffffffffffffffffffffffffffffff16146103d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604860248201527f56616c696461746f725265776172645661756c743a2066756e6374696f6e206360448201527f616e206f6e6c792062652063616c6c65642066726f6d207468652056616c696460648201527f61746f72506f6f6c000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661047c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f56616c696461746f725265776172645661756c743a2076616c696461746f722060448201527f616464726573732063616e6e6f7420626520300000000000000000000000000060648201526084016103d0565b60008181526002602052604090205460ff1615610541576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604e60248201527f56616c696461746f725265776172645661756c743a207468652072657761726460448201527f2068617320616c7265616479206265656e207061696420666f7220746865204c60648201527f3220626c6f636b206e756d626572000000000000000000000000000000000000608482015260a4016103d0565b600061054b6107f5565b600380548201905573ffffffffffffffffffffffffffffffffffffffff84166000818152600160208181526040808420805487019055878452600282529283902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016909217909155905183815292935084927f291e8ba3c0f4b0bd86e6e2346fcee1e7ca0975b1cc1886bfbc722d34f3f24d91910160405180910390a3505050565b60006105fa610835565b604080516020810182526000815290517fe11013dd0000000000000000000000000000000000000000000000000000000081529192507342000000000000000000000000000000000000099163e11013dd9184916106619133916188b89190600401610c3f565b6000604051808303818588803b15801561067a57600080fd5b505af115801561068e573d6000803e3d6000fd5b505050505050565b60606106c17f0000000000000000000000000000000000000000000000000000000000000000610982565b6106ea7f0000000000000000000000000000000000000000000000000000000000000000610982565b6107137f0000000000000000000000000000000000000000000000000000000000000000610982565b60405160200161072593929190610c83565b604051602081830303815290604052905090565b6000610743610835565b90506000610762335a8460405180602001604052806000815250610a40565b9050806107f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f56616c696461746f725265776172645661756c743a20455448207472616e736660448201527f6572206661696c6564000000000000000000000000000000000000000000000060648201526084016103d0565b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000600354476108269190610cf9565b6108309190610d37565b905090565b336000908152600160205260408120547f000000000000000000000000000000000000000000000000000000000000000081101561091b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152605660248201527f56616c696461746f725265776172645661756c743a207769746864726177616c60448201527f20616d6f756e74206d7573742062652067726561746572207468616e206d696e60648201527f696d756d207769746864726177616c20616d6f756e7400000000000000000000608482015260a4016103d0565b33600081815260016020908152604080832083905560038054869003905582548501909255815184815290810183905280820192909252517fc8a211cc64b6ed1b50595a9fcb1932b6d1e5a6e8ef15b60e5b1f988ea9086bba9181900360600190a1919050565b6060600061098f83610a5a565b600101905060008167ffffffffffffffff8111156109af576109af610d72565b6040519080825280601f01601f1916602001820160405280156109d9576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85049450846109e357509392505050565b600080600080845160208601878a8af19695505050505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610aa3577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310610acf576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610aed57662386f26fc10000830492506010015b6305f5e1008310610b05576305f5e100830492506008015b6127108310610b1957612710830492506004015b60648310610b2b576064830492506002015b600a8310610b37576001015b92915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610b6157600080fd5b919050565b60008060408385031215610b7957600080fd5b610b8283610b3d565b946020939093013593505050565b60005b83811015610bab578181015183820152602001610b93565b83811115610bba576000848401525b50505050565b60008151808452610bd8816020860160208601610b90565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610c1d6020830184610bc0565b9392505050565b600060208284031215610c3657600080fd5b610c1d82610b3d565b73ffffffffffffffffffffffffffffffffffffffff8416815263ffffffff83166020820152606060408201526000610c7a6060830184610bc0565b95945050505050565b60008451610c95818460208901610b90565b80830190507f2e000000000000000000000000000000000000000000000000000000000000008082528551610cd1816001850160208a01610b90565b60019201918201528351610cec816002840160208801610b90565b0160020195945050505050565b600082821015610d32577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b600082610d6d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea164736f6c634300080f000a"

func init() {
	if err := json.Unmarshal([]byte(ValidatorRewardVaultStorageLayoutJSON), ValidatorRewardVaultStorageLayout); err != nil {
		panic(err)
	}

	layouts["ValidatorRewardVault"] = ValidatorRewardVaultStorageLayout
	deployedBytecodes["ValidatorRewardVault"] = ValidatorRewardVaultDeployedBin
}
